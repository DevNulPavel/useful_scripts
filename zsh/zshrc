########################################################################
# Install before:
# 1. sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
# 2. curl -L git.io/antigen > ~/.antigen.zsh
# 3. brew install fzf

# Plugins list:
# https://github.com/unixorn/awesome-zsh-plugins
########################################################################

# Antigen plugins
source ~/.antigen.zsh

# Load the oh-my-zsh's library.
antigen use oh-my-zsh

# Plugins
antigen bundle git
antigen bundle cargo
antigen bundle brew
antigen bundle branch
antigen bundle vscode
antigen bundle rustup 
antigen bundle rust 
antigen bundle colorize
antigen bundle adb
antigen bundle sublime
antigen bundle sudo
antigen bundle gradle
antigen bundle python
antigen bundle pod
antigen bundle fzf
antigen bundle zsh-users/zsh-autosuggestions
antigen bundle zsh-users/zsh-syntax-highlighting
antigen bundle zsh-users/zsh-completions
antigen bundle zsh-users/zsh-history-substring-search

# Apply app settings
antigen apply

########################################################################

# FZF Search
# либо можно подключить с помощью плагина для antigen: antigen bundle fzf
# [ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# Skim search (ZFZ analogue)
# Install: brew install sk
# Файлы нужно скачать из https://github.com/lotabout/skim/tree/master/shell
# mkdir -p ~/.skim
# curl -L https://raw.githubusercontent.com/lotabout/skim/master/shell/key-bindings.zsh > ~/.skim/key-bindings.zsh
# curl -L https://raw.githubusercontent.com/lotabout/skim/master/shell/completion.zsh > ~/.skim/completion.zsh
# [ -f ~/.skim/key-bindings.zsh ] && source ~/.skim/key-bindings.zsh
# [ -f ~/.skim/completion.zsh ] && source ~/.skim/completion.zsh

########################################################################

# $(git_prompt_info)
# ZSH_THEME_GIT_PROMPT_PREFIX="(git: "
# ZSH_THEME_GIT_PROMPT_SUFFIX=")$reset_color"
# ZSH_THEME_GIT_PROMPT_DIRTY="$terminfo[bold]$fg[red]"
# ZSH_THEME_GIT_PROMPT_CLEAN="$terminfo[bold]$fg[green]"
# function local_git_info() {
#     echo "$(parse_git_dirty)$(git_prompt_info)"
# }
# $(local_git_info)

# Terminal prompt
# https://jonasjacek.github.io/colors/
# %D 
# %*
# %@
# %m
# %n
# %~
# %? 
# %{$fg[white]%}[%*]%{$reset_color%}
# %(!.#.$)
#%{$fg[magenta]%}# -------------------------------------------%{$reset_color%} 
# %{$fg[white]%}[%*]%{$reset_color%}
# %{$fg[blue]%}---------------------%{$reset_color%}
# %{$fg[cyan]%}(%n@%m)%{$reset_color%} 
PROMPT="%{$fg[magenta]%}#####################################################%{$reset_color%} 
%{$fg[cyan]%}%n@%m%{$reset_color%}: \
%{$terminfo[bold]$fg[yellow]%}%~%{$reset_color%} 
%{$terminfo[bold]$fg[red]%}->%{$reset_color%} "

########################################################################

# https://www.netmeister.org/blog/keychain-passwords.html ###
# https://gist.github.com/bmhatfield/f613c10e360b4f27033761bbee4404fd

# Use: get_osx_keychain_variable SECRET_ENV_VAR
# Example: export AWS_ACCESS_KEY_ID=$(get_osx_keychain_variable AWS_ACCESS_KEY_ID);
function get_osx_keychain_variable() {
    security find-generic-password -w -a ${USER} -D "environment variable" -s "${1}"
}
# Use: set_osx_keychain_variable SECRET_ENV_VAR
function set_osx_keychain_variable() {
    [ -n "$1" ] || print "Missing environment variable name"
    
    # Note: if using bash, use `-p` to indicate a prompt string, rather than the leading `?`
    read -s "?Enter Value for ${1}: " secret
    
    ( [ -n "$1" ] && [ -n "$secret" ] ) || return 1
    security add-generic-password -U -a ${USER} -D "environment variable" -s "${1}" -w "${secret}"
}

########################################################################

alias x86='arch -x86_64'
alias von='vpn_on_murm.sh'
alias voff='vpn_off.sh'
alias vof='vpn_off.sh'
alias vst='vpn_status.sh'
